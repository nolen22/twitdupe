// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(cuid())
  name          String   @unique
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  threads       Thread[]
  likes         Like[]
  reposts       Repost[]
  replies       Reply[]
}

model Thread {
  id         String   @id @default(cuid())
  content    String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  author     User     @relation(fields: [authorId], references: [id])
  authorId   String
  likeCount  Int      @default(0)
  replyCount Int      @default(0)
  repostCount Int      @default(0)
  likes      Like[]
  reposts    Repost[]
  replies    Reply[]
}

model Like {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  thread    Thread   @relation(fields: [threadId], references: [id])
  threadId  String

  @@unique([userId, threadId])
}

model Repost {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  thread    Thread   @relation(fields: [threadId], references: [id])
  threadId  String

  @@unique([userId, threadId])
}

model Reply {
  id        String   @id @default(cuid())
  content   String
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  thread    Thread   @relation(fields: [threadId], references: [id])
  threadId  String
} 